.image {
	
  opacity: 1;
  display: block;
  width: 100%;
  height: auto;
  transition: .5s ease;
  backface-visibility: hidden;
}

.container {
  position: relative;
  width: 50%;
}


context path명 
/로시작하는 주소 : 절대 uri
..로 시작하는 주소 : 상대 uri 혀ㅛㄴ재 html파일 기준으로 

• action : 사용자의 입력 데이터를 처리할 CGI 프로그램의 URL 주소를 지정한다.
• method : 사용자 데이터를 넘겨주는 방식을 지정하는데, GET과 POST 방식 두 가지다.
GET은 입력 내용을 요청 URI 뒤에 붙여서 보내고, POST는 요청 바디에 담아서 보낸다


서블릿 특: 하나의 서블릿으로 동시요청.. 하나의 서블릿 객체를 공유해서 수행

전역변수 지역변수 : 
전역: 최초 객체 생성이 일어났을때 +10
지역 : 두갯 함수 호출댈때마다 메모리에 올라감 안에서기때문에 계속 10 추가 안댐.요청끝나면 업서짐
다른브라우저로 열어도 전역변수는 그대로임 서블릿 객체는 계속 ㅣㅇㅆ기 때문
서버 리로드 될때까지 유짇댐 

각각 : 지역변수 
공유 : 전역

앵간하면 지역변수에 넣음 
다른애가 요청하면 걔 전역변수도 바꾸ㅣㄹ수잇ㅇ서어

전역 : 쇼핑카트 장바군이 근데 모든클라가 공유함 ㅠ 
지역 : 쇼핑카트 장바구니 것다키면 업서짐 ㅠ
이럴때 사용하는게 세션 객체
http session -> was가 관리. request.getssession 
안만들어졋으면 만들어서 리턴
있으면 그거 리턴

**만들어달라고 해야 만들어줌 was한테 
전역 지역으로도 해결 안대면 세션으로 해결.
클라이언트마다 개별적으로 가짐. 
클라이언트별로 계속 보관하고싶은 데이터 넣어주면 댐.
근데 **반드시 객체형만 넣을수잇음. 기본형 안댐**
더이상 유지할 필요 없으면 지우면 댐 
셋 어트리뷰트
리무브 어트리뷰트
겟 어트리뷰트 
이용해서 
개수제한 없음
객체마다 이름 부여 (네임, 벨류 쌍)
무조건 하나만 만들어줌 
클라이언트가 계속 요청 안하면 자동삭제됨 -> 이거도 와스가 함
일정시간 : 기본값은 30분.  바꿀수 이씀 은행은 2분 
이 시간 이름 : 인액티브 인터벌 ㅇㅅㅇ 무한대로 할수도 있어
직접삭제도 가능 
상태정보: 이런저런 데이터들. 로그인해따. 로그인안해따. 몇개 장바구니 담았다..현재어떤상태다
상태정보유지기술 : 상태정보를 원할떄까지 유지하는 기술 

어떤 세션객체가 누구껀지 어케구분?
-> 회원가입 안해도 로그인 안해도 장바구니 상품 담기 가능 -> 어떤 클라이언트껀지 구분하는
먼가가 이씀. -> 서버에 만ㅁ들어지는 세션객체들은 세션id라는게 부여댐.
세션id : 클라 고유 식별자임. 이걸로 구분 . 서버가 할일 
이 세션객체 id를 클라이언트에 저장함. -> 이게 쿠키라는 것 
클라이언트에 보관되는 네임-밸류 쌍의 데이터.
쿠키 : 서블릿만의 전용 기술이 아님. 자바스크립트로도 할수이씀. 
쿠키 : 우리 사이트를 방문한적이 잇는 클라를 기억하려고.. 
헨델과 그레텔 쿠키 떨구고 가는..
쿠키기술 이용해서 세션아이디를 클라에 보관함. 
서버가 쿠키를 주면(응답헤더에 담아서 줌) set-cookie : 으애앵
이거를 클라가 보관해줌.
보관만하는게 안리ㅏ 다시 그 서버에 요청하게 댓을때 보관대잇던 쿠키정보를 담아서줌
누가 보관햇늦ㄴ지도 다 넣어둠.

쿠키먼저 찾아봄. 그럼 새로 만들어.
만약 와써. 그러면 그 아이디에 대한 세션객체 찾아봐.
그다으멩 리턴.
그 아이디에 대한 세션객체가 (30분대서) 사라졋어
그럼 새로 만들어
  
**상태정보유지기술** 4가지
1. 쿠키 - 유지하고싶은 데이터를 브라우저에저장함. 세션도 내부적으로쿠키를 쓰고있음. 
세션 안쓰고 그냥 브라우저에 쿠키 저장해도 댐. 
보안적으로 문제가 될수도 잇음. 누구나 열어서 볼수있기떔문 
쿠키쓰는거 : 24시간 안띄움 팝업창, 계쩡보관하는거. 자동로그인. 업서져도 별로 상관없는거

2. httpsession객체이용 - 클라이언트에 대한 정보를 서버에 저장하고 클라이언트 세션아이디만
클라이언트에 보관함. (우리가 배우눈거))

3. url 문자열뒤에 추가

4. form태그의 hidden 타입 사용


쿠키의 유효시간 : 브라우저 살아있는 동안. 세션아이디에대한 쿠키가 사라져끼떄문. 내부적으로 쿠키를 쓴거. was랑 브라우저가 알아서 함 

***http session 객체 상태정보 유지 매서드 ****

 request.getSession() : http 세션 객체 리턴 이미 만들어져잇느에 & 아님 만들어서
아규먼트 안줄수도, 트루 펄스 줄수도 이씀. 아규먼트 안주는거 = 트루주는거
트루주면 아직 안만드러졋으면 새로 만들어서, 잇으면ㅊ찾아서 리턴 (만드는게 목적)
펄스주면 아직 안만들어져셔므녀 널 리턴, 잇으면 찾아서리턴. (그냥 있으면 찾아서쓰는게 목적)

session.setAttribute(“xxx”, new Data()) 보관하려는 정보를 객체로 만들어서 저장.  (이름, 객체)


session.removeAttribute(“xxx”) 필요업슬때.

session.getAttribute(“xxx”) 저장해놧던거 갖고옴. 중복 안댐. 중복하면 마지막에 넣은애만 남음. 강제형변환연산 필수. 

session.invalidate() : HttpSession 객체를 강제로 삭제한다.

브라우저끼리는 공유. 같은 크롬내에서는 세션 공유 

public Enumeration getAttributeNames()
세션에 등록된 객체들의 이름을 열거한다.
public long getCreationTime()
1970. 1.1 GMT 부터 세션이 만들어졌을 때까지의 시간을 밀리초의 단위로 리턴한다.
public String getId()
세션에 지정된 세션 ID를 리턴한다.
public long getLastAccessedTime()
클라이언트 요청이 마지막으로 시도된 시간을 밀리초로 리턴한다.
public int getMaxInactiveInterval()
클라이언트의 요구가 없을 때 서버가 현재의 세션을 언제까지 유지할지를 초시간 단위로 리턴한다.
이때 디폴트 세션마감시간은 30분으로 지정되어 있다.
public boolean isNew()
서버측에서 새로운 세션을 생성한 경우에는 true를 리턴하고 기존의 세션이 유지되고 있는 경우라면
 false를 리턴한다.
public void setMaxInactiveInterval(int seconds)
세션 유지 시간을 설정한다. 이 시간이 지나면 세션은 자동 종료(HttpSession객체 삭제)된다. 

***요청 재지정
요청재지정이란 클라이언트에서 요청한 페이지 대신 다른 페이지를 클라이언트가 보게 되는 기능으로서
redirect 방법과 forward 방법으로 나뉜다.
- redirect : HttpServletResponse 의 sendRedirect() 메서드를 사용한다.
- forward : RequestDispatcher 의 forward() 메서드를 사용한다.

서버에서만 클라 모르게 응답 대상을 넘긴다. 하지만 클라에서는 모름
리다이렉트 : 클라에서 앎  (잠시후 다른페이지로 너머감니다)
302, 301 랑 함께 유알엘이 같이옴
그러면 그 유알엘한테 다시요청함. 유알엘이 바낌-> 알수잇음 : 리다이렉트
포워드 : 노란애한테 물어봣는데 빨간애가 대답. 
포워드 : 같은 웹 프로젝트 안에 잇는 자원만 포워드 가능. 
리다이렉트 : 다른 웹 프로젝트에 있어도 가능 


mvc통신에서 포워드는 필수. jsp로 구현해야함. 

url, 절대url, 상대url
매핑해서 찾는거라서
디랙토리가 아니라 매핑명이라 사진같은거 나오게하렴녀 절대주소 줘야함
 <img src= "/edu/images/제목 없음5.png" width="300">
이러케 아니면 http도 다 붙이거나..












