web

- servlet
- spring mvc

클라이언트쪽에서 서버에 요청을 보내야 함
요청에따라 서블릿을 수행시키고 결과를 줘야할 경우가 있

찾아서 주면 끝나느거 : 웹 클라이언트 . html. css. javascript. 수행위치 : 브라우저 만약 찾는게 없으면 404 not found

실행위치에 따라 클라/서버 다름

서블릿 jsp php는 서버쪽
jquery : 자바스크립트 라이브러리 api . 
html 라이브러리 : 자바스크립트로 만듬 

웹/앱 
팀 버너스 리 : 웹 창시자./ www 비영리단체 무료. 누구나 개발 참여. 누구나 정보 웹을 통해서
정보를 공유할 수 잇도록 해야함. 표준 규격 사용.

서버용 프로그램 : 브라우저. 아파치 웹서버. 
------------
웹 표준
웹페이지 작성시 기준, 기반

웹 접근성
모든 사용자를 위한 웹 환경 구현.

구조 내용 : html
디자인 : css
동적인 상호작용 : javascript. 발생한 이벤트 처리. 요소에 대한 동적 crud

ajax 기준으로 많이 바뀜. 
html5 : 웹표준에 기반한 웹사이트 개발. 브라우저와 디바이스에 무관.

html 문서구조
선언문
html
head : 정보
body : 컨텐츠 영역

주석 : <!--  --!>
<p> : 태그 
<p align = "center"> 태그 속성 속성값

보이게 하는거 : 렌더링

html css 없이 렌더링 : 안예쁨
css 목적 : 같은 html파일이여도 css다르면 달라짐. 꾸미는 목적

클라우드 발전 -> 하드디스크가 필요없어짐 

html하단에 javascript 작성
javascript는 <script></>안에 씀
컨텐트에 script가 옴 
바디태그 맨밑에 작성하는게좋.
암때나 해도된대

== 타입 다른데 타입 맞춰놓고 비교해줌.
=== :  타입도 같고 값도 같아야 true. 타입 동일한지 체크하고 안동일하면 flase

javascript : 배열 관련 매서드 많음. 자바보다 효율적임 

함수명 안줘도 됨
반환타입 안줘도 됨
인자 자료형 안줘돋 됨

fucntion func(agrm) {
 
}

javascript도 객체생성 가능 

{
 속성명 : 속성값, 속성명 : 속성값, …
 }   ::객체리터럴방식  생성자함수방식도 있음. 생성자가 많을때는 적합하지 않음.
데이터만 갖고있는 객체 만들떄 적합.
-> 제이슨이랑 비슷. 

프로토타입을 쓰면 효율적인 메모리 관리 가능 : 생성자함수방식 

자바스크립트 내장객체

돔 -> 마니 배우게될거임. 동적으로 변화시킬 목적으로 많이 사용
 클라이엉ㄴ트에 따라서 html 태그에 접근해서 값 바꿀수 잇어야해서
html 태그들을 객체로 갖공ㅅ어야하 함. 이때 쓰는게 돔.
자바스크립트에서 html 값 변경 접근 !!


jquery 자바스크립트를 쉽게 이용할 목적 
$로 시작하는게 다 제이퀄리


비동기통신 ajax 
x : xml

json으로 구현할수도 이씀 


----------
안닫아도 되는 태그
싱글사이드 태그 30퍼 안닫아도 댐.
<hr> 선그어줌
더블사이드 : 닫아야대는애 70퍼

http://localhost:80/html/test.html >> html url string
protocol name
    server address
    (localhost == 127.0.0.1)
          port number
               URI --> uniform resource identity (서버한테 가는부분)
 	   /html/test.html
             ------- --> context path : 어떤 웹 프로젝의 자원을 요청할 것인지 결정
	   html --> /html  
	   exam --> 톰캣서버 등록 --> /exam 컨텍스트 패스로 등록. 갯수제한 없음
	   컨텍스트 라고 부른다. 
	   인식 하고 나면 그뒤에잇는애가 있나 찾아봄.
	   없으면 웹앱이라는 폴더를 찾아감. (도큐먼트 최상위 폴더. 도큐먼트베이스)

	   맨앞에꺼 읽고 난 다음에 src/main/webapp.app 찾아감
 	  

다한번에 가져오는게 아니ㅏㄹ 요청해서 가져옴 브라우저가
html인데 서버에서 가져온 데이터 -> jsp 


-------------

웹 통신 표준 : http

서버 응답 / 클라 요청
html응답
하나하나 읽어서doc영역에 렌더링한다.(알맞게 보여주는것)
Connection Oriented와 (접속이 된 상태에서 통신) Stateless 방식 
(접속상태 계속유지 안하고 요청-응답 하고나면 끝. 다른 클라 접속 기회 줌. 처리 효율 높일 수 이따.)
내부적으로 tcp 씀. 
web에서 쓰일만한 제일 적절해서 여태 잘 쓰임.

default : get . url 지정 파일 요청. 뒤에 간단한 쿼리 문자열 데이터 추가하여 전달할수도 있음
post : 입력 폼 제시. 값 보낼때. 파일 업로드.. 

서블릿, jsp
자바기반의 웹서버 프로그래밍 기술
jsp : 서블릿의 단점 보완하기 위해 나옴

둘다 구현 가능. 
차이:
자바가 주인공 : 서블릿/ 출력결과를 html로 내보냄 
html이 주인공 : jsp/ html 부분부분에 자바코드를 껴넣음.. 화면에 나올게 많은거.

서로 장단점이 있어서 협업시킨게 mvc패턴
mvc: model view controller
스프링 : mvc의 기본 
클라이언트 요청과 관련된거 :  서블릿
결과를 응답하는부분 : jsp구현

멀티쓰레드. 
하나의 서블릿 객체 생성해서 공유해서 사용. 

매핑 여러개 할수도 있다. 

매핑정보 작성 방법 두가지. 
정해진 테그와 함께 web.xml
아니면 @webservlet 이렇게 쓰는거 뒤에 urlpartterns 여러가지 추가가능

was : web application server
web server + application server 
                 ----------------------> servlet container + jsp converter

서블릿 컨테이너. : 정해진 룰대로 실행하는 프로그램.  이 안에 메인 클래스가 있다. 객체 생성해서 수행함. 
이미객체가 있으면 또 생성 안하고 그거로 그냥 씀 . 
was가 메인클래스. 
tomcat과 같은 was안에 서블릿 컨테이너가 있다. 
서블릿도 객체 생성. 
쓰레드 기동해서 해당 서블릿 기동. 
init 호출 -> service() 호출. -> doget(), dopost()호출.
!!!!!!서블릿은 무조건 객체가 하나만 생성된다. !!!!!!!













